<#@ import namespace="System.Collections" #>

<#+
public class ControllerTemplate : BaseTemplate
{
	public ControllerTemplate(string solutionName, EntityScaffoldingDetails entityScaffoldingDetails) 
		: base(solutionName, entityScaffoldingDetails) { }

	protected override void RenderCore()
	{
#>
using System;
using System.Web.Mvc;
using DecisionesInteligentes.Colef.Sia.ApplicationServices;
using DecisionesInteligentes.Colef.Sia.Core;
using DecisionesInteligentes.Colef.Sia.Web.Controllers.Mappers;
using DecisionesInteligentes.Colef.Sia.Web.Controllers.Models;
using SharpArch.Web.NHibernate;

namespace DecisionesInteligentes.Colef.Sia.Web.Controllers
{
    [HandleError]
    public class <#= EntityScaffoldingDetails.EntityName #>Controller : BaseController<<#= EntityScaffoldingDetails.EntityName #>, <#= EntityScaffoldingDetails.EntityName #>Form>
    {
		readonly ICatalogoService catalogoService;
        readonly I<#= EntityScaffoldingDetails.EntityName #>Mapper <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper;
    
        public <#= EntityScaffoldingDetails.EntityName #>Controller(IUsuarioService usuarioService, ICatalogoService catalogoService, 
																	I<#= EntityScaffoldingDetails.EntityName #>Mapper <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper, ISearchService searchService) 
			: base (usuarioService, searchService, catalogoService)
        {
            this.catalogoService = catalogoService;
            this.<#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper;
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult Index() 
        {
			var data = CreateViewDataWithTitle(Title.Index);
			
			var <#= EntityScaffoldingDetails.EntityNamePluralCamelCase #> = catalogoService.GetAll<#= EntityScaffoldingDetails.EntityNamePlural #>();
            data.List = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(<#= EntityScaffoldingDetails.EntityNamePluralCamelCase #>);

            return View(data);
        }
        
        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult New()
        {			
			var data = CreateViewDataWithTitle(Title.New);
            data.Form = new <#= EntityScaffoldingDetails.EntityName #>Form();
			
			return View(data);
        }
        
        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult Edit(int id)
        {
            var data = CreateViewDataWithTitle(Title.Edit);

            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = catalogoService.Get<#= EntityScaffoldingDetails.EntityName #>ById(id);
            data.Form = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);

			ViewData.Model = data;
            return View();
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult Show(int id)
        {
            var data = CreateViewDataWithTitle(Title.Show);

            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = catalogoService.Get<#= EntityScaffoldingDetails.EntityName #>ById(id);
            data.Form = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);
            
            ViewData.Model = data;
            return View();
        }
        
        [CustomTransaction]
        [ValidateAntiForgeryToken]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Create(<#= EntityScaffoldingDetails.EntityName #>Form form)
        {
        
            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(form);
            
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.CreadorPor = CurrentUser();
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.ModificadoPor = CurrentUser();

            if(!IsValidateModel(<#= EntityScaffoldingDetails.EntityNameCamelCase #>, form, Title.New))
                return ViewNew();

            catalogoService.Save<#= EntityScaffoldingDetails.EntityName #>(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);

            return RedirectToIndex(String.Format("<#= EntityScaffoldingDetails.EntityName #> {0} ha sido creado", <#= EntityScaffoldingDetails.EntityNameCamelCase #>.Nombre));
        }
        
        [CustomTransaction]
        [ValidateAntiForgeryToken]
        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Update(<#= EntityScaffoldingDetails.EntityName #>Form form)
        {
        
            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(form);
            
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.ModificadoPor = CurrentUser();

            if (!IsValidateModel(<#= EntityScaffoldingDetails.EntityNameCamelCase #>, form, Title.Edit))
                return ViewEdit();

            catalogoService.Save<#= EntityScaffoldingDetails.EntityName #>(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);

            return RedirectToIndex(String.Format("<#= EntityScaffoldingDetails.EntityName #> {0} ha sido modificado", <#= EntityScaffoldingDetails.EntityNameCamelCase #>.Nombre));
        }
        
        [CustomTransaction]
        [AcceptVerbs(HttpVerbs.Put)]
        public ActionResult Activate(int id)
        {
            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = catalogoService.Get<#= EntityScaffoldingDetails.EntityName #>ById(id);
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.Activo = true;
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.ModificadoPor = CurrentUser();
            catalogoService.Save<#= EntityScaffoldingDetails.EntityName #>(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);

            var form = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);
            
            return Rjs(form);
        }
        
        [CustomTransaction]
        [AcceptVerbs(HttpVerbs.Put)]
        public ActionResult Deactivate(int id)
        {
            var <#= EntityScaffoldingDetails.EntityNameCamelCase #> = catalogoService.Get<#= EntityScaffoldingDetails.EntityName #>ById(id);
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.Activo = false;
            <#= EntityScaffoldingDetails.EntityNameCamelCase #>.ModificadoPor = CurrentUser();
            catalogoService.Save<#= EntityScaffoldingDetails.EntityName #>(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);

            var form = <#= EntityScaffoldingDetails.EntityNameCamelCase #>Mapper.Map(<#= EntityScaffoldingDetails.EntityNameCamelCase #>);
            
            return Rjs("Activate", form);
        }
        
        [AcceptVerbs(HttpVerbs.Get)]
        public override ActionResult Search(string q)
        {
            var data = searchService.Search<<#= EntityScaffoldingDetails.EntityName #>>(x => x.Nombre, q);
            return Content(data);
        }
    }
}
<#+
	}
}
#>
