<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ import namespace="System.Collections.Specialized" #>
<#@ output extension="txt" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="./CustomTemplates/ScaffoldingGenerator.tt" #>
<#@ include file="EntityScaffoldingDetails.tt" #>

<#
///////////////////////////////////////////////////
// Set your domain object details below and simply uncomment the last line (".Run()") and save this file to auto-generate the scaffolding

/*
 * Domain name should be PascalCaseSingular with no spaces.
 * You may qualify the domain object with a namespace; a folder structure reflecting the namespace structure will be created (or verified).
 * A log of created artifacts may be found in /DI.Colef.Sia/logs/CrudScaffolding.log
 * Examples:  ("Usuario"), ("Admin.Usuario")
 *			  (entityName), ("FolderName.entityName") 
 */
 
//EntityScaffoldingDetails(Entidad, scaffoldType)
//(FolderName.EntityName, 1) Catalogo
//(Name, 2) Objeto con Form y Mappers con referencia a catalogo
//(Name, 3) Formas con ILists

EntityScaffoldingDetails entityScaffoldingDetails =
	new EntityScaffoldingDetails("Capitulo", 3);
 
/*
 * Property names should be PascalCase.
 * Do not include a property for Id as it will be included automatically.
 */
 
//EntityProperty(propertyName, typeName, defaultValueForTests, propertyAttributes, isPartOfDomainSignature)
entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("TipoCapitulo", "TipoCapitulo", "TipoCapitulo")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("NombreCapitulo","string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("FechaAceptacion", "DateTime", null, "[NotEmptyDate]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("FechaEdicion", "DateTime", null, "[NotEmptyDate]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Estado", "Estado", "Estado")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("PeriodoReferencia", "PeriodoReferencia", "PeriodoReferencia")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("LineaTematica", "LineaTematica", "LineaTematica")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Idioma", "Idioma", "Idioma")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("CoautorExternoCapitulos", "IList<CoautorExternoCapitulo>", "InvestigadorExterno")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("CoautorInternoCapitulos", "IList<CoautorInternoCapitulo>", "Investigador")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("NombreLibro", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Editorial", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Pais", "Pais", "Pais")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("NoPaginas", "int", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("ResponsableInternoCapitulos", "IList<ResponsableInternoCapitulo>", "Investigador")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("ResponsableExternoCapitulos", "IList<ResponsableExternoCapitulo>", "InvestigadorExterno")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("FormaParticipacion", "FormaParticipacion", "FormaParticipacion")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Volumen", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Editores", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("TipoParticipacion", "TipoParticipacion", "TipoParticipacion")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("TipoParticipante", "TipoParticipante", "TipoParticipante")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Area", "Area", "Area")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Disciplina", "Disciplina", "Disciplina")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Subdisciplina", "Subdisciplina", "Subdisciplina")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Traductor", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("NombreTraductor", "string", null, "[NotNullNotEmpty]")
);

entityScaffoldingDetails.EntityProperties.Add(
	new EntityProperty("Resumen", "string", null, "[NotNullNotEmpty]")
);

///////////////////////////////////////////////////

// The first parameter should reflect the root directory of your solution
ScaffoldingGenerator generator = new ScaffoldingGenerator(
	@"C:\Proyectos\DI.Colef.Sia\", "DI.Colef.Sia", entityScaffoldingDetails); 

// Uncomment this line when you're ready for the scaffolding generator to fire...be sure to recomment after it completes to avoid accidental generating!
//generator.Run();
#>